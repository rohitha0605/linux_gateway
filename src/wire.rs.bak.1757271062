use crc32fast::Hasher;
pub const VERSION_V1: u8 = 1;

pub fn crc32(data: &[u8]) -> u32 {
    let mut h = Hasher::new();
    h.update(data);
    h.finalize()
}

/// v1 frame = [version=1][payload...][crc32(payload) little-endian]
pub fn wrap_v1(payload: &[u8]) -> Vec<u8> {
    let mut out = Vec::with_capacity(1 + payload.len() + 4);
    out.push(VERSION_V1);
    out.extend_from_slice(payload);
    out.extend_from_slice(&crc32(payload).to_le_bytes());
    out
}
