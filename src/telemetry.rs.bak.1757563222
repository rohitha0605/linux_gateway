use anyhow::Result;
use opentelemetry::global;
use opentelemetry_sdk::propagation::TraceContextPropagator; // <-- 0.22 path
use tracing_subscriber::{fmt, EnvFilter, prelude::*};

#[allow(deprecated)]
pub fn init(service_name: &str) -> Result<()> {
    // Jaeger agent exporter (UDP 6831)
    let tracer = opentelemetry_jaeger::new_agent_pipeline()
        .with_service_name(service_name)
        .install_batch(opentelemetry_sdk::runtime::Tokio)?; // runtime from sdk

    // W3C tracecontext propagator (traceparent)
    global::set_text_map_propagator(TraceContextPropagator::new());

    // tracing-subscriber + OTEL layer
    let otel = tracing_opentelemetry::layer().with_tracer(tracer);
    tracing_subscriber::registry()
        .with(fmt::layer())
        .with(EnvFilter::from_default_env())
        .with(otel)
        .try_init()
        .ok();

    Ok(())
}
