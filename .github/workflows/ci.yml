name: CI
on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: System deps
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler lcov

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt, llvm-tools-preview

      - uses: Swatinem/rust-cache@v2

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all-targets -- -D warnings

      - name: Build
        run: cargo build --verbose

      - name: Tests
        run: cargo test --all --verbose

      - name: Coverage (lcov)
        run: |
          cargo install cargo-llvm-cov --locked
          cargo llvm-cov --lcov --output-path lcov.info

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: lcov.info
          path: lcov.info

      - name: JUnit report
        run: |
          rustup toolchain install nightly --profile minimal
          cargo +nightly install cargo2junit --locked
          cargo +nightly test --all -- -Z unstable-options --format json | cargo2junit > junit.xml

      - name: Upload JUnit
        uses: actions/upload-artifact@v4
        with:
          name: junit.xml
          path: junit.xml

  fuzz-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: System deps
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      - name: Run fuzz smoke (20s)
        run: cargo +nightly fuzz run frame_decode -- -max_total_time=20 -print_final_stats=1
      - name: Upload fuzz artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fuzz-output
          path: |
            fuzz/corpus/frame_decode
            fuzz/artifacts/frame_decode

  renode-smoke:
    if: ${{ hashFiles('renode/smoke.resc') != '' }}
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Show script (placeholder)
        run: |
          echo "Renode smoke placeholder:"
          sed -n '1,200p' renode/smoke.resc
          echo "Skipping actual Renode run for now."
