name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Build (all targets)
        run: cargo build --all-targets --locked

      - name: Test (all)
        run: cargo test --all --locked

  fuzz-smoke:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@nightly

      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: Run fuzz smoke (20s)
        run: cargo +nightly fuzz run frame_decode -- -max_total_time=20 -print_final_stats=1

      # Pack any fuzz outputs to avoid illegal filename characters in artifacts (e.g. ':')
      - name: Pack fuzz outputs (tar)
        if: ${{ always() }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p _artifacts
          for d in fuzz/artifacts/* fuzz/corpus/*; do
            [ -d "$d" ] || continue
            base="$(echo "$d" | tr '/:' '__')"
            tar -czf "_artifacts/${base}.tgz" -C "$(dirname "$d")" "$(basename "$d")" || true
          done

      - name: Upload fuzz artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          overwrite: true
          name: fuzz-output-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: _artifacts/*.tgz

      - name: Run Renode smoke in Docker
        if: ${{ always() }}
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/work" \
            -w /work antmicro/renode:latest \
            sh -lc 'renode --console -e "mach create; quit"' | tee renode.log

      - name: Upload Renode log
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          overwrite: true
          name: renode-log-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: renode.log
