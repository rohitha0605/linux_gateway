name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt, llvm-tools-preview

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --verbose

      - name: Test
        run: cargo test --all --verbose

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all-targets -- -D warnings

      # -------- JUnit test report --------
      - name: Install cargo2junit
        run: cargo install cargo2junit

      - name: Tests â†’ JUnit XML
        # --format json is stable; no -Z flags needed
        run: cargo test --all -- --format json | cargo2junit > target/junit.xml

      - name: Upload JUnit
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: target/junit.xml

      # -------- Coverage (lcov) --------
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Coverage (lcov)
        run: cargo llvm-cov --lcov --output-path target/lcov.info

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: target/lcov.info

  fuzz-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: Run fuzz smoke (20s)
        run: cargo +nightly fuzz run frame_decode -- -max_total_time=20 -print_final_stats=1

      - name: Upload fuzz artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fuzz-output
          path: |
            fuzz/corpus/frame_decode
            fuzz/artifacts/frame_decode

  renode-smoke:
    name: Renode smoke
    if: ${{ hashFiles('renode/smoke.resc') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Renode (portable)
        run: |
          sudo apt-get update && sudo apt-get install -y wget unzip
          wget -q https://github.com/renode/renode/releases/download/v1.15.3/renode-1.15.3.linux-portable.zip -O renode.zip
          unzip -q renode.zip -d renode_bin
      - name: Run smoke script
        run: ./renode_bin/renode/run.sh -e 'i @renode/smoke.resc'
