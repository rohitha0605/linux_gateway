name: CI (build + test + fuzz)

on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --all
      - name: Test
        run: cargo test --all

  fuzz:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      - name: Build fuzz target
        run: |
          cd fuzz
          cargo fuzz build frame_decode
      - name: Ensure corpus dirs
        run: |
          mkdir -p fuzz/corpus/frame_decode
          mkdir -p fuzz/artifacts/frame_decode
      - name: Run fuzz (60s smoke)
        run: |
          cd fuzz
          cargo fuzz run frame_decode -- -max_total_time=60 -rss_limit_mb=2048 || true
      - name: Pack fuzz outputs (avoid ':' filename errors)
        if: always()
        run: |
          mkdir -p ci_artifacts
          [ -d fuzz/corpus/frame_decode ]    && tar -czf ci_artifacts/corpus_frame_decode.tgz    -C fuzz/corpus    frame_decode || true
          [ -d fuzz/artifacts/frame_decode ] && tar -czf ci_artifacts/artifacts_frame_decode.tgz -C fuzz/artifacts frame_decode || true
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fuzz-results-${{ github.run_id }}
          path: ci_artifacts/*
          if-no-files-found: ignore
          retention-days: 14
