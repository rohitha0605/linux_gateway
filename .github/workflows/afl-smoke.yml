name: afl-smoke
on:
  workflow_dispatch: {}
permissions:
  contents: read
jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install deps (AFL++, clang, protoc)
        run: |
          sudo apt-get update
          sudo apt-get install -y afl++ clang protobuf-compiler

      - name: Build (release)
        run: cargo build --release

      - name: Seed corpus (if missing)
        run: |
          mkdir -p fuzz/seeds
          [ -s fuzz/seeds/seed.txt ] || printf '0A0B0C\n0001020304\n' > fuzz/seeds/seed.txt

      - name: Fuzz 60s (non-blocking)
        env:
          AFL_SKIP_CPUFREQ: "1"
          AFL_NO_UI: "1"
          AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES: "1"
        run: |
          mkdir -p fuzz/out
          timeout 60s afl-fuzz -V 60 -i fuzz/seeds -o fuzz/out -- \
            target/release/linux_gateway --decode @@ || true

      - name: Tar AFL output (always)
        if: always()
        run: |
          mkdir -p artifacts
          # Create an empty tarball if nothing is there so upload never fails
          if [ -d fuzz/out ] && find fuzz/out -mindepth 1 -print -quit | grep -q .; then
            tar -C fuzz/out -czf artifacts/afl-out-${{ github.run_id }}.tgz .
          else
            tar -czf artifacts/afl-out-${{ github.run_id }}.tgz --files-from /dev/null
          fi

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: afl-out-${{ github.run_id }}
          path: artifacts/afl-out-${{ github.run_id }}.tgz
          if-no-files-found: warn
