name: CI Summary
on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
  workflow_dispatch: {}

permissions:
  actions: read
  contents: read

jobs:
  aggregate:
    if: github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts from triggering run
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ github.event.workflow_run.id }}
          # omit 'name' to download ALL artifacts from that run
          # or use: pattern: '*'
          path: artifacts
          if_no_artifact_found: warn

      - name: JUnit summary (fail job on failures/errors)
        shell: bash
        run: |
          set -euo pipefail
          python3 - <<'PY' | tee -a "$GITHUB_STEP_SUMMARY"
import os, sys, xml.etree.ElementTree as ET
paths=[]
for r,_,fs in os.walk('artifacts'):
    for fn in fs:
        if fn=='junit.xml':
            paths.append(os.path.join(r,fn))
if not paths:
    print("JUnit: not found"); sys.exit(0)

T=F=E=S=0
for p in paths:
    try:
        root=ET.parse(p).getroot()
    except Exception:
        continue
    for ts in root.iter('testsuite'):
        T+=int(ts.get('tests',0) or 0)
        F+=int(ts.get('failures',0) or 0)
        E+=int(ts.get('errors',0) or 0)
        S+=int(ts.get('skipped',0) or 0)
print(f"JUnit: {T} tests, {F} failures, {E} errors, {S} skipped")
sys.exit(1 if F>0 or E>0 else 0)
PY

      - name: Coverage summary (aggregate all lcovs)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(artifacts/**/lcov.info)
          if [ ${#files[@]} -eq 0 ]; then
            echo "Line coverage: n/a" | tee -a "$GITHUB_STEP_SUMMARY"
            exit 0
          fi
          awk -F, '/^DA:/{t++; if ($2>0) c++}
                   END{ if(t) printf("Line coverage: %.2f%% (%d/%d)\n",100*c/t,c,t);
                        else print "Line coverage: n/a" }' "${files[@]}" \
            | tee -a "$GITHUB_STEP_SUMMARY"
