name: CI Summary
on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  aggregate:
    if: github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      checks: write
    steps:
      - name: Download artifacts from triggering run
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: "*"
          path: artifacts
          if_no_artifact_found: warn

      - name: JUnit summary
        shell: bash
        run: |
          shopt -s nullglob
          mapfile -t files < <(find artifacts -type f -name junit.xml)
          if [ ${#files[@]} -eq 0 ]; then
            echo "JUnit: not found" | tee -a "$GITHUB_STEP_SUMMARY"
            exit 0
          fi
          T=0; F=0; E=0; S=0
          for f in "${files[@]}"; do
            read t ff ee ss < <(awk -v FS='[=" ]' '/<testsuite /{for(i=1;i<=NF;i++){if($i=="tests")tt+=$(i+1);if($i=="failures")ff+=$(i+1);if($i=="errors")ee+=$(i+1);if($i=="skipped")ss+=$(i+1)}}END{printf("%d %d %d %d",tt+0,ff+0,ee+0,ss+0)}' "$f")
            T=$((T+t)); F=$((F+ff)); E=$((E+ee)); S=$((S+ss))
          done
          echo "JUnit: $T tests, $F failures, $E errors, $S skipped" | tee -a "$GITHUB_STEP_SUMMARY"
          if [ "$F" -gt 0 ] || [ "$E" -gt 0 ]; then exit 1; fi
      - name: Coverage summary
        shell: bash
        run: |
          f=$(find artifacts -type f -name lcov.info | head -n1)
          if [ -z "$f" ]; then
            echo "Coverage: not found" | tee -a "$GITHUB_STEP_SUMMARY"
            exit 0
          fi
          pct=$(awk -F, '/^DA:/{t++; if ($2>0) c++} END{if(t) printf("%.2f",100*c/t); else print 0}' "$f")
          echo "Line coverage: ${pct}%" | tee -a "$GITHUB_STEP_SUMMARY"
        continue-on-error: true
