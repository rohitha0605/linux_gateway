name: CI Summary

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  actions: read
  contents: read

jobs:
  aggregate:
    if: github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    env:
      COVERAGE_MIN: "10"

    steps:
      - name: Download artifacts from triggering run
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ github.event.workflow_run.id }}
          path: artifacts
          if_no_artifact_found: warn

      - name: JUnit summary (fail job on failures/errors)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(artifacts/**/junit.xml)
          if [ ${#files[@]} -eq 0 ]; then
            echo "JUnit: not found" | tee -a "$GITHUB_STEP_SUMMARY"
            exit 0
          fi
          awk -F'[=\" ]' '
            /<testsuite /{
              for(i=1;i<=NF;i++){
                if($i=="tests")    T+=$(i+1)
                if($i=="failures") F+=$(i+1)
                if($i=="errors")   E+=$(i+1)
                if($i=="skipped")  S+=$(i+1)
              }
            }
            END{
              printf("JUnit: %d tests, %d failures, %d errors, %d skipped\n", T+0,F+0,E+0,S+0)
              if((F+0)>0 || (E+0)>0) exit 1
            }
          ' "${files[@]}" | tee -a "$GITHUB_STEP_SUMMARY"

      - name: Coverage summary (aggregate all lcovs)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(artifacts/**/lcov.info)
          if [ ${#files[@]} -eq 0 ]; then
            echo "Line coverage: n/a" | tee -a "$GITHUB_STEP_SUMMARY"
            exit 0
          fi
          pct=$(awk -F, '/^DA:/{t++; if ($2>0) c++} END{ if(t) printf("%.2f",100*c/t); else print 0 }' "${files[@]}")
          echo "Line coverage: ${pct}%" | tee -a "$GITHUB_STEP_SUMMARY"
          awk -v p="$pct" -v min="${COVERAGE_MIN:-10}" 'BEGIN{ exit (p+0 >= min+0) ? 0 : 1 }'
