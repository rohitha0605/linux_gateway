/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: calc.proto */

#ifndef PROTOBUF_C_calc_2eproto__INCLUDED
#define PROTOBUF_C_calc_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct Rpmsg__Calc__V1__CalcRequest Rpmsg__Calc__V1__CalcRequest;
typedef struct Rpmsg__Calc__V1__CalcResponse Rpmsg__Calc__V1__CalcResponse;


/* --- enums --- */

typedef enum _Rpmsg__Calc__V1__CalcRequest__Op {
  RPMSG__CALC__V1__CALC_REQUEST__OP__Sum = 0,
  RPMSG__CALC__V1__CALC_REQUEST__OP__Sub = 1,
  RPMSG__CALC__V1__CALC_REQUEST__OP__Mul = 2,
  RPMSG__CALC__V1__CALC_REQUEST__OP__Div = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RPMSG__CALC__V1__CALC_REQUEST__OP)
} Rpmsg__Calc__V1__CalcRequest__Op;

/* --- messages --- */

struct  Rpmsg__Calc__V1__CalcRequest
{
  ProtobufCMessage base;
  /*
   * varint (enum)
   */
  Rpmsg__Calc__V1__CalcRequest__Op op;
  /*
   * varint
   */
  uint32_t a;
  /*
   * varint
   */
  uint32_t b;
};
#define RPMSG__CALC__V1__CALC_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpmsg__calc__v1__calc_request__descriptor) \
, RPMSG__CALC__V1__CALC_REQUEST__OP__Sum, 0, 0 }


struct  Rpmsg__Calc__V1__CalcResponse
{
  ProtobufCMessage base;
  /*
   * varint
   */
  uint32_t result;
};
#define RPMSG__CALC__V1__CALC_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpmsg__calc__v1__calc_response__descriptor) \
, 0 }


/* Rpmsg__Calc__V1__CalcRequest methods */
void   rpmsg__calc__v1__calc_request__init
                     (Rpmsg__Calc__V1__CalcRequest         *message);
size_t rpmsg__calc__v1__calc_request__get_packed_size
                     (const Rpmsg__Calc__V1__CalcRequest   *message);
size_t rpmsg__calc__v1__calc_request__pack
                     (const Rpmsg__Calc__V1__CalcRequest   *message,
                      uint8_t             *out);
size_t rpmsg__calc__v1__calc_request__pack_to_buffer
                     (const Rpmsg__Calc__V1__CalcRequest   *message,
                      ProtobufCBuffer     *buffer);
Rpmsg__Calc__V1__CalcRequest *
       rpmsg__calc__v1__calc_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpmsg__calc__v1__calc_request__free_unpacked
                     (Rpmsg__Calc__V1__CalcRequest *message,
                      ProtobufCAllocator *allocator);
/* Rpmsg__Calc__V1__CalcResponse methods */
void   rpmsg__calc__v1__calc_response__init
                     (Rpmsg__Calc__V1__CalcResponse         *message);
size_t rpmsg__calc__v1__calc_response__get_packed_size
                     (const Rpmsg__Calc__V1__CalcResponse   *message);
size_t rpmsg__calc__v1__calc_response__pack
                     (const Rpmsg__Calc__V1__CalcResponse   *message,
                      uint8_t             *out);
size_t rpmsg__calc__v1__calc_response__pack_to_buffer
                     (const Rpmsg__Calc__V1__CalcResponse   *message,
                      ProtobufCBuffer     *buffer);
Rpmsg__Calc__V1__CalcResponse *
       rpmsg__calc__v1__calc_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpmsg__calc__v1__calc_response__free_unpacked
                     (Rpmsg__Calc__V1__CalcResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Rpmsg__Calc__V1__CalcRequest_Closure)
                 (const Rpmsg__Calc__V1__CalcRequest *message,
                  void *closure_data);
typedef void (*Rpmsg__Calc__V1__CalcResponse_Closure)
                 (const Rpmsg__Calc__V1__CalcResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rpmsg__calc__v1__calc_request__descriptor;
extern const ProtobufCEnumDescriptor    rpmsg__calc__v1__calc_request__op__descriptor;
extern const ProtobufCMessageDescriptor rpmsg__calc__v1__calc_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_calc_2eproto__INCLUDED */
